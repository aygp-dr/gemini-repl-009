# Rust build artifacts
/target
***/target

# Cargo lock file (include for applications, exclude for libraries)
# Since this is an application, we keep Cargo.lock in version control
# Cargo.lock
# But exclude experiment Cargo.lock files
experiments/*/Cargo.lock

# Backup files
**/*.rs.bk
*.pdb

# MSVC Windows builds
*.pdb

# Python
.venv/
venv/
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
.pytest_cache/
.mypy_cache/
.coverage
htmlcov/
.tox/
.nox/
*.egg-info/
dist/
build/

# Environment files
.env
.env.*
!.env.example

# Temporary files
.tmp/
tmp/
*.tmp
*.temp
*.log
logs/

# Editor directories and files
.idea/
.vscode/
*.swp
*.swo
*~
.DS_Store
*.sublime-workspace

# OS files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
.directory

# Project specific
workspace/
.sessions/
.gemini_repl/
.gemini-repl/
.claude/
.ai/

# Test artifacts
test-results/
*.orig

# Backup files
*.bak
*.backup

# Coverage reports
tarpaulin-report.html
cobertura.xml
coverage/

# Flamegraph
flamegraph.svg
perf.data*

# RLS
rls*.log

# Rustfmt
**/*.rs.fmt

# Cargo configuration
.cargo/config.toml
!.cargo/config.toml.example

# Documentation builds
/docs/_build/
/site/

# Node (if you add any JS tooling)
node_modules/

# direnv
.envrc
.direnv/

# Local notes
*.local
notes.txt
TODO.txt

# Formal methods tools (large JAR files)
tools/formal-methods/
tools/*.jar
*.jar
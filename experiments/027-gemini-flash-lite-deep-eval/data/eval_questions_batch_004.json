{
  "batch_id": "batch_004",
  "created_at": "2025-07-31T10:05:00Z",
  "model_target": "gemini-2.0-flash-lite",
  "questions": [
    {
      "id": "q076",
      "question": "What is the difference between composition and inheritance?",
      "expected_tool_calls": [],
      "category": "non-tool",
      "context": "Object-oriented design principles"
    },
    {
      "id": "q077",
      "question": "List all JavaScript files in the mcp-server-qrcode project",
      "expected_tool_calls": ["list_files"],
      "category": "file-listing",
      "context": "Exploring MCP server TypeScript/JavaScript implementation"
    },
    {
      "id": "q078",
      "question": "Read the package.json from mcp-server-qrcode",
      "expected_tool_calls": ["read_file"],
      "category": "file-reading",
      "context": "Understanding Node.js project configuration"
    },
    {
      "id": "q079",
      "question": "Search for 'qrcode' generation functions in mcp-server-qrcode",
      "expected_tool_calls": ["search_code"],
      "category": "code-search",
      "context": "Finding QR code generation implementation"
    },
    {
      "id": "q080",
      "question": "Create a result aggregator module results.py in experiments/027-gemini-flash-lite-deep-eval/src",
      "expected_tool_calls": ["write_file"],
      "category": "file-creation",
      "context": "Building result processing infrastructure"
    },
    {
      "id": "q081",
      "question": "What is database normalization and why is it important?",
      "expected_tool_calls": [],
      "category": "non-tool",
      "context": "Database design principles"
    },
    {
      "id": "q082",
      "question": "List all Clojure files in the core-async-flow-workshop",
      "expected_tool_calls": ["list_files"],
      "category": "file-listing",
      "context": "Exploring concurrent programming workshop materials"
    },
    {
      "id": "q083",
      "question": "Read the deps.edn configuration from core-async-flow-workshop",
      "expected_tool_calls": ["read_file"],
      "category": "file-reading",
      "context": "Understanding Clojure project dependencies"
    },
    {
      "id": "q084",
      "question": "Find all references to 'async' in the core-async-flow-workshop",
      "expected_tool_calls": ["search_code"],
      "category": "code-search",
      "context": "Understanding asynchronous programming patterns"
    },
    {
      "id": "q085",
      "question": "Show the directory structure of the claude-log-stream project",
      "expected_tool_calls": ["list_files"],
      "category": "directory-structure",
      "context": "Understanding log processing project layout"
    },
    {
      "id": "q086",
      "question": "Read the detailed_session_analysis.clj from claude-log-stream",
      "expected_tool_calls": ["read_file"],
      "category": "file-reading",
      "context": "Understanding session analysis implementation"
    },
    {
      "id": "q087",
      "question": "What are microservices and what are their advantages and disadvantages?",
      "expected_tool_calls": [],
      "category": "non-tool",
      "context": "System architecture patterns"
    },
    {
      "id": "q088",
      "question": "Search for 'telemetry' usage in the claude-code-metrics-lab tests",
      "expected_tool_calls": ["search_code"],
      "category": "code-search",
      "context": "Finding observability test patterns"
    },
    {
      "id": "q089",
      "question": "Create a metrics collector script metrics.py in experiments/027-gemini-flash-lite-deep-eval/src",
      "expected_tool_calls": ["write_file"],
      "category": "file-creation",
      "context": "Building evaluation metrics collection"
    },
    {
      "id": "q090",
      "question": "List all Python files in the dtmfmarker project",
      "expected_tool_calls": ["list_files"],
      "category": "file-listing",
      "context": "Exploring audio processing implementation"
    },
    {
      "id": "q091",
      "question": "Read the dtmfmarker.py main implementation file",
      "expected_tool_calls": ["read_file"],
      "category": "file-reading",
      "context": "Understanding DTMF audio signal processing"
    },
    {
      "id": "q092",
      "question": "What is eventual consistency in distributed systems?",
      "expected_tool_calls": [],
      "category": "non-tool",
      "context": "Distributed systems theory"
    },
    {
      "id": "q093",
      "question": "Find all shell script files in the freebsd-sysmap project",
      "expected_tool_calls": ["list_files", "search_code"],
      "category": "shell-scripts",
      "context": "Locating system administration automation"
    },
    {
      "id": "q094",
      "question": "Show the SECURITY.org file from freebsd-sysmap",
      "expected_tool_calls": ["read_file"],
      "category": "file-reading",
      "context": "Understanding security documentation"
    },
    {
      "id": "q095",
      "question": "Search for 'service' management patterns in freebsd-sysmap",
      "expected_tool_calls": ["search_code"],
      "category": "code-search",
      "context": "Finding FreeBSD service management implementation"
    },
    {
      "id": "q096",
      "question": "Create a report generator report.py in experiments/027-gemini-flash-lite-deep-eval/src",
      "expected_tool_calls": ["write_file"],
      "category": "file-creation",
      "context": "Building evaluation report generation"
    },
    {
      "id": "q097",
      "question": "What is the difference between REST and GraphQL APIs?",
      "expected_tool_calls": [],
      "category": "non-tool",
      "context": "API design paradigms"
    },
    {
      "id": "q098",
      "question": "List all Rust files in the gemini-repl-009 experiments directory",
      "expected_tool_calls": ["list_files"],
      "category": "file-listing",
      "context": "Exploring Rust implementations in experiments"
    },
    {
      "id": "q099",
      "question": "Read the Cargo.toml from experiments/027-gemini-flash-lite-deep-eval",
      "expected_tool_calls": ["read_file"],
      "category": "file-reading",
      "context": "Understanding Rust project configuration"
    },
    {
      "id": "q100",
      "question": "Find all function call related code in the gemini-repl-009 source",
      "expected_tool_calls": ["search_code"],
      "category": "code-search",
      "context": "Understanding function calling implementation patterns"
    }
  ]
}